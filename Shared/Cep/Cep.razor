@using blazorApp.ViewModels.Entity;

<div class="cepContainer">

    <div style="justify-content: right">

        <span style="padding: 1em;">CEP: @cep</span>
        
        <button type="button" class="close mt-2 mr-2" @onclick="OnBtnClick"> 
        <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" fill="currentColor" class="bi bi-x-circle" viewBox="0 0 16 16">
            <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z"/>
            <path d="M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z"/>
        </svg>
        </button>
    </div>
        <div class="alert alert-secondary mt-4 ml-1 mr-1" role="alert">
            <div style="display: flex; justify-content: space-between;">
                <h6>Confira o endereço do CEP informado</h6> 
                @if (userCepComponent == null)
                {
                    <div class="alert-warning" role="alert">
                        <h6>Não há json do CEP</h6>
                    </div>
                }else{
                    <ul>
                        <li>
                            <span>@userCepComponent.bairro</span>
                        </li>
                        <li>
                            <span>@userCepComponent.localidade</span>
                        </li>
                        <li>
                            <span>@userCepComponent.ddd</span>
                        </li>
                        <li>
                            <span>@userCepComponent.uf</span>
                        </li>
                    </ul>
                }
            </div>
        </div>
</div>

@code {
    // Demonstrates how a parent component can supply parameters
    [Parameter] public string cep { get; set; }

    [Parameter] public UserCep userCepComponent {get; set;} 

    [Parameter] public EventCallback showComponent { get; set;}

    private async Task OnBtnClick() => await showComponent.InvokeAsync();

        
    }

